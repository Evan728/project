<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.efinance" />
    <!--<tx:annotation-driven transaction-manager="txManager" />-->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	
	<!--定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" destroy-method="close"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="maxPoolSize" value="40" />
		<property name="minPoolSize" value="10" />
		<property name="initialPoolSize" value="10" />
		<property name="idleConnectionTestPeriod" value="60" />
		
	</bean>
	
	
	<!-- Hibernate的Spring容器中的配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="packagesToScan">
			<list>
				<value>com.efinance.model</value>
				<value>com.efinance.dao</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect = org.hibernate.dialect.MySQLDialect
				hibernate.show_sql = true
				hibernate.format_sql = false
				hibernate.hbm2ddl.auto = update
			</value>
		
		</property>
	</bean>
	
	
	
	
<!--	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">-->
<!--		<property name="sessionFactory" ref="sessionFactory"></property>-->
<!--	</bean>-->
    <!--事务管理 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="execution(public * com.efinance.service.*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="exists" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
<!--	<bean id="transactionInterceptor"	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">		-->
<!--		<property name="transactionManager" ref="transactionManager" />		-->
<!--		<property name="transactionAttributes">			-->
<!--			<props>  			 -->
<!--				<prop key="*">PROPAGATION_REQUIRED</prop>			-->
<!--			</props>		-->
<!--		</property>-->
<!--	</bean>-->
</beans>